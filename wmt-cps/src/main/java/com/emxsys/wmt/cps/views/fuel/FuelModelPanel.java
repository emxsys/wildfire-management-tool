/*
 * Copyright (c) 2009-2012, Bruce Schubert. <bruce@emxsys.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * - Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * - Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * - Neither the name of Bruce Schubert, Emxsys nor the names of its 
 *   contributors may be used to endorse or promote products derived
 *   from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.emxsys.wmt.cps.views.fuel;

import com.emxsys.wildfire.api.FuelModel;
import com.emxsys.wmt.cps.Model;
import com.emxsys.wmt.cps.charts.FuelModelChart;
import java.beans.PropertyChangeEvent;
import java.util.logging.Logger;

/**
 * FuelModelPanel displays the Fuel Model Bar Chart.
 * 
 * @author Bruce Schubert <bruce@emxsys.com>
 */
public class FuelModelPanel extends javax.swing.JPanel {

    private FuelModel fuelModel;
    private final FuelModelChart chart;
    private static final Logger logger = Logger.getLogger(FuelModelPanel.class.getName());


    /**
     * Creates new form FuelModelInputPanel
     */
    public FuelModelPanel() {
        initComponents();
        chart = new FuelModelChart();
        add(chart);
        
        Model.getInstance().addPropertyChangeListener(Model.PROP_FUELMODEL, (PropertyChangeEvent evt) -> {
            updateChart((FuelModel) evt.getNewValue());
        });
    }
    
    /**
     * @return The current FuelModel depicted in the chart.
     */
    public FuelModel getFuelModel() {
        return this.fuelModel;
    }
    private void updateChart(FuelModel fuelModel) {
        if (this.fuelModel != null && this.fuelModel.equals(fuelModel)) {
            return;
        }
        this.fuelModel = fuelModel;
        this.chart.updateChart(fuelModel);
    }


    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    // End of variables declaration//GEN-END:variables
}
