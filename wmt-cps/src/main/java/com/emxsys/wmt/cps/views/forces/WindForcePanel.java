/*
 * Copyright (c) 2014, Bruce Schubert <bruce@emxsys.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     - Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *
 *     - Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *
 *     - Neither the name of Bruce Schubert, Emxsys nor the names of its 
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.emxsys.wmt.cps.views.forces;

import com.emxsys.gis.api.Coord3D;
import com.emxsys.weather.api.Weather;
import com.emxsys.weather.api.WeatherModel;
import com.emxsys.wmt.cps.Model;
import com.emxsys.wmt.cps.WeatherManager;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeSupport;
import org.openide.util.NbBundle;
import visad.FlatField;

/**
 * Displays the Wind Force.
 *
 * @author Bruce Schubert
 */
@NbBundle.Messages({})
public class WindForcePanel extends javax.swing.JPanel {

    // Properties that are available from this panel
    public static final String PROP_WINDDIR = "PROP_WINDDIR";
    public static final String PROP_WINDSPEED = "PROP_WINDSPEED";

    // The ForcesTopComponent will add the PropertyChangeListeners
    public final PropertyChangeSupport pcs = new PropertyChangeSupport(this);
    
    // Implementation
    private final com.emxsys.weather.panels.WindForcePanel windPanel = new com.emxsys.weather.panels.WindForcePanel();

    /**
     * Constructor creates new form WindForcePanel.
     */
    public WindForcePanel() {
        initComponents();
        add(windPanel);
        
        // Forward property changes to parent
        windPanel.addPropertyChangeListener((e) -> {
            switch (e.getPropertyName()) {
                case com.emxsys.weather.panels.WindForcePanel.PROP_WIND_DIR:
                    pcs.firePropertyChange(PROP_WINDDIR, e.getOldValue(), e.getNewValue());
                    break;
                case com.emxsys.weather.panels.WindForcePanel.PROP_WIND_SPD:
                    pcs.firePropertyChange(PROP_WINDSPEED, e.getOldValue(), e.getNewValue());
                    break;
            }
        });

        // Update the charts from the CPS data model
        Model.getInstance().addPropertyChangeListener(Model.PROP_WEATHER, (PropertyChangeEvent evt) -> {
            Weather weather = (Weather) evt.getNewValue();
            windPanel.setWindDirection(weather.getWindDirection());
            windPanel.setWindSpeed(weather.getWindSpeed());
        });
  
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(WindForcePanel.class, "WindForcePanel.border.title"))); // NOI18N
        setLayout(new java.awt.BorderLayout());
        getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(WindForcePanel.class, "WindForcePanel.border.title")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
