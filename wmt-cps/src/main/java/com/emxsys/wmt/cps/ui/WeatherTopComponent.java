/*
 * Copyright (c) 2014, Bruce Schubert <bruce@emxsys.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     - Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *
 *     - Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *
 *     - Neither the name of Bruce Schubert, Emxsys nor the names of its 
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.emxsys.wmt.cps.ui;

import com.terramenta.ribbon.RibbonActionReference;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import javax.swing.JPanel;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.emxsys.wmt.cps.ui//Weather//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = WeatherTopComponent.PREFERRED_ID,
        iconBase = "com/emxsys/wmt/cps/images/sun_clouds.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_WeatherAction",
        preferredID = WeatherTopComponent.PREFERRED_ID
)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "com.emxsys.wmt.cps.ui.WeatherTopComponent")
@RibbonActionReference(path = "Menu/Window/Show",
        position = 220,
        priority = "top",
        description = "#CTL_WeatherAction_Hint",
        tooltipTitle = "#CTL_WeatherAction_TooltipTitle",
        tooltipBody = "#CTL_WeatherAction_TooltipBody",
        tooltipIcon = "com/emxsys/wmt/cps/images/sun_clouds.png")
//        tooltipFooter = "#CTL_WeatherAction_TooltipFooter",
//        tooltipFooterIcon = "com/terramenta/images/help.png")
@Messages({
    "CTL_WeatherTopComponent=Weather",
    "CTL_WeatherTopComponent_Hint=The Weather window.",
    "CTL_WeatherAction=Weather",
    "CTL_WeatherAction_Hint=Show the Weather.",
    "CTL_WeatherAction_TooltipTitle=Show the Weather",
    "CTL_WeatherAction_TooltipBody=Activates the Weather window used for visualizing "
    + "the weather conditions influencing fire behavior.",
    "CTL_WeatherAction_TooltipFooter=Press F1 for more help."
})
public final class WeatherTopComponent extends TopComponent {

    public static final String PREFERRED_ID = "WeatherTopComponent";
    private JPanel layoutPanel;
    private AirTemperaturePanel airTemperaturePanel;
    private RelativeHumidityPanel relativeHumidityPanel;
    private WindPanel windPanel;

    public WeatherTopComponent() {
        initComponents();
        createChartPanels();
        setName(Bundle.CTL_WeatherTopComponent());
        setToolTipText(Bundle.CTL_WeatherTopComponent_Hint());
        putClientProperty(TopComponent.PROP_KEEP_PREFERRED_SIZE_WHEN_SLIDED_IN, Boolean.TRUE);

    }

    private void createChartPanels() {
        airTemperaturePanel = new AirTemperaturePanel();
        relativeHumidityPanel = new RelativeHumidityPanel();
        windPanel = new WindPanel();

        centerPanel.add(airTemperaturePanel);
        centerPanel.add(relativeHumidityPanel);
        centerPanel.add(windPanel);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        upperPanel = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        centerPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        upperPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(WeatherTopComponent.class, "WeatherTopComponent.upperPanel.border.title"))); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout upperPanelLayout = new javax.swing.GroupLayout(upperPanel);
        upperPanel.setLayout(upperPanelLayout);
        upperPanelLayout.setHorizontalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jComboBox1, 0, 325, Short.MAX_VALUE)
        );
        upperPanelLayout.setVerticalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jComboBox1)
        );

        add(upperPanel, java.awt.BorderLayout.NORTH);

        centerPanel.setLayout(new java.awt.GridLayout(3, 1));
        add(centerPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel centerPanel;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JPanel upperPanel;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
