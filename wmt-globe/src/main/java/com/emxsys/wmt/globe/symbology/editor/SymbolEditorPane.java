/*
 * Copyright (c) 2012, Bruce Schubert <bruce@emxsys.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     - Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *
 *     - Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *
 *     - Neither the name of Bruce Schubert, Emxsys nor the names of its 
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.emxsys.wmt.globe.symbology.editor;

import com.emxsys.gis.api.Coord3D;
import com.emxsys.wmt.globe.symbology.SymbolIconRetriever;
import gov.nasa.worldwind.symbology.SymbologyConstants;
import gov.nasa.worldwind.symbology.milstd2525.MilStd2525TacticalSymbol;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import org.openide.util.NbBundle;

/**
 * GUI component for editing a MilStd2525TacticalSymbol.
 *
 * @author Bruce Schubert
 * @see MilStd2525TacticalSymbol
 */
@NbBundle.Messages({
    "CTL_SymbolPositionLocked=Locked",
    "CTL_SymbolPositionUnlocked=Unlocked",
    "CTL_SymbolLockedDesc=Locked: the symbol's position is locked.",
    "CTL_SymbolUnlockedDesc=Unlocked: the symbol can be moved."
})

class SymbolEditorPane extends javax.swing.JPanel {

    private MilStd2525TacticalSymbol symbol;
    private boolean taskForce;
    private boolean installation;

    /**
     * Creates new form SymbolEditorPane
     */
    SymbolEditorPane(String name, Coord3D position, boolean isLocked, MilStd2525TacticalSymbol symbol) {
        this.symbol = symbol;
        initComponents();

        updateImage();

        // Create the name field -- autoselect the text to ease the editing of default names
        nameText.setText(name);
        nameText.setSelectionStart(0);
        nameText.setSelectionEnd(name.length());

        identifierText.setText(symbol.getIdentifier());
        commentsText.setText((String) symbol.getModifier(SymbologyConstants.STAFF_COMMENTS));

        // Position coordinates
        latitudeLabel.setText(position.getLatitude().toValueString());
        longitudeLabel.setText(position.getLongitude().toValueString());

        // Update the "locked" button
        lockToggleButton.setSelected(!isLocked);
        lockToggleButtonStateChanged(null);
    }

    private void updateImage() {
        // Draw the symbol
        ((ImagePanel) imagePanel).setImage(SymbolIconRetriever.getDefault().getSymbolImage(symbol));
    }

    public String getSymbolName() {
        return nameText.getText().trim();
    }

    public boolean isMovable() {
        return !lockToggleButton.isSelected();
    }

    class ImagePanel extends JPanel {

        private Image image;

        public void setImage(Image image) {
            this.image = image;
        }

        ImagePanel() {
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            if (image != null) {
                g.drawImage(image, 0, 0, null); // see javadoc for more info on the parameters            
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lockToggleButton = new javax.swing.JToggleButton();
        lockLabel = new javax.swing.JLabel();
        IdentifierLabel = new javax.swing.JLabel();
        identifierText = new javax.swing.JLabel();
        imagePanel = new ImagePanel();
        commentsLabel = new javax.swing.JLabel();
        commentsText = new javax.swing.JTextField();
        quantityText = new javax.swing.JTextField();
        taskForceCheckBox = new javax.swing.JCheckBox();
        installationCheckBox = new javax.swing.JCheckBox();
        commentsLabel1 = new javax.swing.JLabel();
        commentsText1 = new javax.swing.JTextField();
        commentsLabel2 = new javax.swing.JLabel();
        latLabel = new javax.swing.JLabel();
        lonLabel = new javax.swing.JLabel();
        latitudeLabel = new javax.swing.JLabel();
        longitudeLabel = new javax.swing.JLabel();
        nameText1 = new javax.swing.JTextField();
        nameLabel1 = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(nameLabel, org.openide.util.NbBundle.getMessage(SymbolEditorPane.class, "SymbolEditorPane.nameLabel.text")); // NOI18N

        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        lockToggleButton.setToolTipText(org.openide.util.NbBundle.getMessage(SymbolEditorPane.class, "SymbolEditorPane.lockToggleButton.toolTipText")); // NOI18N
        lockToggleButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lockToggleButtonStateChanged(evt);
            }
        });
        lockToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lockToggleButtonActionPerformed(evt);
            }
        });

        lockLabel.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(IdentifierLabel, org.openide.util.NbBundle.getMessage(SymbolEditorPane.class, "SymbolEditorPane.IdentifierLabel.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lockToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lockLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(353, 353, 353))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(IdentifierLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(identifierText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IdentifierLabel)
                    .addComponent(identifierText, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lockToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        imagePanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );

        org.openide.awt.Mnemonics.setLocalizedText(commentsLabel, org.openide.util.NbBundle.getMessage(SymbolEditorPane.class, "SymbolEditorPane.commentsLabel.text")); // NOI18N

        commentsText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                commentsTextFocusLost(evt);
            }
        });

        quantityText.setText(org.openide.util.NbBundle.getMessage(SymbolEditorPane.class, "SymbolEditorPane.quantityText.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(taskForceCheckBox, org.openide.util.NbBundle.getMessage(SymbolEditorPane.class, "SymbolEditorPane.taskForceCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(installationCheckBox, org.openide.util.NbBundle.getMessage(SymbolEditorPane.class, "SymbolEditorPane.installationCheckBox.text")); // NOI18N
        installationCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                installationCheckBoxItemStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(commentsLabel1, org.openide.util.NbBundle.getMessage(SymbolEditorPane.class, "SymbolEditorPane.commentsLabel1.text")); // NOI18N

        commentsText1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                commentsText1FocusLost(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(commentsLabel2, org.openide.util.NbBundle.getMessage(SymbolEditorPane.class, "SymbolEditorPane.commentsLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(latLabel, org.openide.util.NbBundle.getMessage(SymbolEditorPane.class, "SymbolEditorPane.latLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lonLabel, org.openide.util.NbBundle.getMessage(SymbolEditorPane.class, "SymbolEditorPane.lonLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(nameLabel1, org.openide.util.NbBundle.getMessage(SymbolEditorPane.class, "SymbolEditorPane.nameLabel1.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lonLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(longitudeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameText1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameText))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(commentsLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(latLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(latitudeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(taskForceCheckBox)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(commentsLabel1)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(commentsText1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                                        .addComponent(commentsText, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(commentsLabel)))
                            .addComponent(installationCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(246, 246, 246)
                .addComponent(quantityText, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(installationCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(taskForceCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quantityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(commentsLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(latLabel)
                                            .addComponent(latitudeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lonLabel))
                                    .addComponent(longitudeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(nameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(nameText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(commentsLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(commentsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(commentsLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(commentsText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lockToggleButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lockToggleButtonStateChanged
        // Update context sensitive controls here:
        if (lockToggleButton.getModel().isSelected()) {
            lockToggleButton.setIcon(new ImageIcon(getClass().getResource("lock24.png")));
            //lockToggleButton.setText(Bundle.CTL_PositionLocked());
            lockLabel.setText(Bundle.CTL_SymbolLockedDesc());
        } else {
            lockToggleButton.setIcon(new ImageIcon(getClass().getResource("unlock24.png")));
            //lockToggleButton.setText(Bundle.CTL_PositionUnlocked());
            lockLabel.setText(Bundle.CTL_SymbolUnlockedDesc());
        }
    }//GEN-LAST:event_lockToggleButtonStateChanged

    private void lockToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lockToggleButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lockToggleButtonActionPerformed

    private void commentsTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_commentsTextFocusLost
        symbol.setModifier(SymbologyConstants.STAFF_COMMENTS, commentsText.getText());
    }//GEN-LAST:event_commentsTextFocusLost

    private void commentsText1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_commentsText1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_commentsText1FocusLost

    private void installationCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_installationCheckBoxItemStateChanged
        // Toggle the installation glphh
        symbol.setModifier(SymbologyConstants.INSTALLATION,
                evt.getStateChange() == 1 ? SymbologyConstants.INSTALLATION_NORMAL : null);
        updateImage();
    }//GEN-LAST:event_installationCheckBoxItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IdentifierLabel;
    private javax.swing.JLabel commentsLabel;
    private javax.swing.JLabel commentsLabel1;
    private javax.swing.JLabel commentsLabel2;
    private javax.swing.JTextField commentsText;
    private javax.swing.JTextField commentsText1;
    private javax.swing.JLabel identifierText;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JCheckBox installationCheckBox;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel latLabel;
    private javax.swing.JLabel latitudeLabel;
    private javax.swing.JLabel lockLabel;
    private javax.swing.JToggleButton lockToggleButton;
    private javax.swing.JLabel lonLabel;
    private javax.swing.JLabel longitudeLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nameLabel1;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField nameText1;
    private javax.swing.JTextField quantityText;
    private javax.swing.JCheckBox taskForceCheckBox;
    // End of variables declaration//GEN-END:variables
}
